version: 2
jobs:
  test-alpine:
    docker:
      - image: "alpine:latest"
    environment:
      TARGET: "ath79/generic"
      PROFILE: "tplink_archer-c7-v1"
    steps:
      - run: apk add alpine-sdk gnupg bash bzip2 coreutils curl file findutils gawk grep linux-headers ncurses-dev outils-signify perl python3 rsync unzip wget xz zlib-dev
      - checkout
      - run: bash ./meta image
      - run: ls ./bin/openwrt/snapshot/$TARGET/*sysupgrade.bin

  test-debian:
    docker:
      - image: "debian:latest"
    environment:
      TARGET: "ath79/generic"
      PROFILE: "tplink_archer-c7-v1"
    steps:
      - run: apt-get update -qq
      - run: apt-get install -y build-essential curl file gawk gettext git libncurses5-dev libssl-dev python3 signify-openbsd subversion swig unzip wget zlib1g-dev
      - checkout
      - run: bash ./meta image
      - run: ls ./bin/openwrt/snapshot/$TARGET/*sysupgrade.bin

  deploy-docker:
    machine:
      image: ubuntu-1604:201903-01
    environment:
      DOCKER_IMAGE: "aparcar/openwrt-metabuilder"
    steps:
      - run: docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
      - checkout
      - run: docker build -t "$DOCKER_IMAGE:alpine" -f ".ci/Dockerfile.alpine" .
      - run: docker build -t "$DOCKER_IMAGE:debian" -f ".ci/Dockerfile.debian" .
      - run: docker push "$DOCKER_IMAGE"

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - test-alpine
      - test-debian
      - deploy-docker:
          requires:
            - test-alpine
            - test-debian
          filters:
            branches:
              only:
                - master
